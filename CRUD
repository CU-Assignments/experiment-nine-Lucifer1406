import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.springframework.context.annotation.*;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.persistence.*;
import java.util.List;

// ---------- ENTITY ----------
@Entity
@Table(name = "employees")
class Employee {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    private String name;
    private String department;

    public Employee() {}
    public Employee(String name, String department) {
        this.name = name;
        this.department = department;
    }

    // Getters and Setters
    public int getId() { return id; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public void setName(String name) { this.name = name; }
    public void setDepartment(String department) { this.department = department; }
}

// ---------- CONFIG ----------
@Configuration
@ComponentScan
@EnableTransactionManagement
class AppConfig {

    @Bean
    public SessionFactory sessionFactory() {
        Configuration cfg = new Configuration()
                .configure() // loads hibernate.cfg.xml
                .addAnnotatedClass(Employee.class);
        return cfg.buildSessionFactory();
    }

    @Bean
    public EmployeeDAO employeeDAO(SessionFactory sessionFactory) {
        return new EmployeeDAO(sessionFactory);
    }
}

// ---------- DAO ----------
class EmployeeDAO {

    private final SessionFactory sessionFactory;

    public EmployeeDAO(SessionFactory sessionFactory) {
        this.sessionFactory = sessionFactory;
    }

    public void save(Employee emp) {
        try (Session session = sessionFactory.openSession()) {
            Transaction tx = session.beginTransaction();
            session.save(emp);
            tx.commit();
        }
    }

    public Employee get(int id) {
        try (Session session = sessionFactory.openSession()) {
            return session.get(Employee.class, id);
        }
    }

    public List<Employee> list() {
        try (Session session = sessionFactory.openSession()) {
            return session.createQuery("from Employee", Employee.class).list();
        }
    }

    public void delete(int id) {
        try (Session session = sessionFactory.openSession()) {
            Transaction tx = session.beginTransaction();
            Employee emp = session.get(Employee.class, id);
            if (emp != null) {
                session.delete(emp);
            }
            tx.commit();
        }
    }
}

// ---------- MAIN ----------
public class SpringHibernateApp {
    public static void main(String[] args) {
        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);

        EmployeeDAO dao = context.getBean(EmployeeDAO.class);

        // Create
        Employee emp = new Employee("Alice", "IT");
        dao.save(emp);

        // Read
        Employee e = dao.get(emp.getId());
        System.out.println("Fetched: " + e.getName() + " in " + e.getDepartment());

        // List
        dao.list().forEach(emp2 -> System.out.println(emp2.getId() + ": " + emp2.getName()));

        // Delete
        dao.delete(emp.getId());

        context.close();
    }
}
